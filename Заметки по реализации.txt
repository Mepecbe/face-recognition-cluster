============== ПО РЕАЛИЗАЦИИ ==============
	Есть главный сервер, на нём запущен сервер API и сервер для обработки информации от воркеров
	Главный сервер так же хранит информацию о людях (идентификатор человека - информация о нём)

	Воркер - сервер занимающийся поиском лица
		Поиск осуществляется среди директорий
		Каждая директория содержит фото одного человека
		Наименование директории - идентификатор человека

============== Описание API ==============

=========================== ВТОРИЧНЫЙ СЕРВЕР ===============================

WorkerServer - сервер, занимающийся поиском лиц
	/addTask POST - добавить задачу по поиску
		<прикреляется файл(filedata)>
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		taskId: string - идентификатор созданной задачи
	
	/createDir GET - создать директорию в папке, в которой хранятся фотографии(а точнее в папке, где находятся папки с фотографиями)
		dirName: string - наименование директории

	/addPhoto GET - добавить фото в папку
		dirName: string - наименование папки в которую поместить фотографию

	/getTasksCount GET - получить количество задач в очереди
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		number - количество задач

	/checkDir GET - проверить существование директории с фотографиями
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		number - количество файлов в папке, код 200
		код 404 - папки не существует



========================== ГЛАВНЫЙ СЕРВЕР ======================

MainWorkerServer - сервер, принимающий сообщения от воркеров, является главным (управляющим)
	/ GET - для проверки доступности и пинга
	/taskResult GET
		taskId: string - идентификатор задачи, результат по которой пришёл
		found: boolean - обнаружено ли совпадение
		faceId?: string - идентификатор найденного совпадения(наименование директории, в которой находятся лица)

	/addServer GET - добавить сервер(при этом в хранилище главного сервера будет добавлена запись о этом сервере(его айпи, порт, и прочая информация))
		ip: string - айпи сервера(или адрес)
		dirs: number - количество папок с фотографиями на сервере
		port: number - порт воркера
		cpuCount: number - количество ядер на сервере


API Server - сервер, позволяющий использовать все возможности сети
	========== РАСПРЕДЕЛЕНИЕ ==========
		/distribution/dirsCount GET - количество директорий с фотографиями
		ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
			number

		/distribution/count GET - узнать количество распределенных или не распределенных директорий
			distributed: 1 или 0 --- 1 - количество распределенных, 0 - количество не распределенных
		ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
			number

		/distribution/checkDistribution GET - проверить распределение на серверах (обычная сверка списка не распределённых директорий со списком директорий на серверах)

		/distribution/checkNetworkIntegrity GET - проверить целостность сети (проверка существования директорий на удалённых серверах)(проверка правильности данных в базе распределённых папок)
			fixErrors: 1 or 0 - исправлять ли ошибки целостности сети
			fullCheck: 1 or 0 - производить ли проверку каждого файла

		/distribution/startAutoDistrib GET - запустить автоматическое распределение
		
		/distribution/loadDirs GET - запустить загрузку директорий

		/distribution/getServersList GET - запросить список идентификаторов серверов, которые в данный момент участвуют в распределении
		ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
			string - идентификатор сервера (если их несколько, то они будут разделены запятой)

		/distribution/updateServerList GET - обновить список доступных серверов
		ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
			number - количество серверов

	========== СЕРВЕРНЫЕ УТИЛИТЫ ==========

	/createTask POST - создать задачу по поиску лица
		filedata - файл фотографии
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		string - идентификатор задачи


	/serversList GET - запрос списка серверов главного воркера
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		{
			id: string,
			url: string,
			port: number,
			cpu_count: number,
			dirsCount: number
		}[]

	/getLag GET - узнать задержку цикла выполнения
	ВОЗВРАЩАЕМЫЕ ЗНАЧЕНИЯ
		number




============= ЗАМЕЧАНИЯ ===========
	При работе распределителя сервер может существенно подвисать, необходимо проверить возможность переписывания распределителя 
		на язык C#